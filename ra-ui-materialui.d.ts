/** Declaration file generated by dts-gen */

export class AppBar {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class AppBarMobile {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ArrayField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class ArrayInput {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class BooleanField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class BulkActions {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class BulkActionsToolbar {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class BulkDeleteAction {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static defaultProps: {
        label: string;
        undoable: boolean;
    };

    static displayName: string;

}

export class BulkDeleteWithConfirmButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class BulkDeleteWithUndoButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class Button {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class CardActions {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class CardContentInner {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ChipField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class CloneButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class Confirm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class CreateButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class CreateView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class DashboardMenuItem {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Datagrid {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class DatagridBody {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

    static muiName: string;

}

export class DatagridHeaderCell {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class DatagridRow {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class DateField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class DeleteWithConfirmButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class DeleteWithUndoButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class EditButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class EditGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class EditView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class EmailField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Error {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class ExportButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class FileField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class Filter {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class FilterButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class FilterForm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class FormInput {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class FormTab {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class FunctionField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Header {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ImageField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class Labeled {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Layout {
    constructor(props: any);

    componentWillReceiveProps(nextProps: any): void;

    render(): any;

    static defaultProps: {
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

}

export class LinearProgress {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Link {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListActions {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class ListGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListToolbar {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        actions: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        bulkActionButtons: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        classes: {
        };
        pagination: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
    };

    static displayName: string;

    static options: {
    };

}

export class Loading {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class LoadingIndicator {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Login {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static defaultProps: {
        backgroundImage: string;
        loginForm: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

    static displayName: string;

    static options: {
    };

}

export class LoginForm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Logout {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Menu {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class MenuItemLink {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class NotFound {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Notification {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class NumberField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
        textAlign: string;
    };

    static displayName: string;

}

export class Pagination {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class PaginationLimit {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class ReferenceArrayField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class ReferenceField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class RefreshButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class RefreshIconButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class ResettableTextField {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Responsive {
    constructor(props: any, context: any);

    componentDidMount(): void;

    componentWillUnmount(): void;

    render(): any;

    static contextTypes: {
    };

    static displayName: string;

}

export class RichTextField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
        stripTags: boolean;
    };

    static displayName: string;

}

export class SaveButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SearchInput {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SelectField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class ShowButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class ShowGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class ShowView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class Sidebar {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class SimpleForm {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class SimpleFormIterator {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SimpleList {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    // static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class SingleFieldList {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Tab {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class TextField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Title {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Toolbar {
    constructor(props: any, context: any);

    componentDidMount(): void;

    componentWillUnmount(): void;

    render(): any;

    static contextTypes: {
    };

    static displayName: string;

    static options: {
    };

}

export class UrlField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class UserMenu {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
        icon: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        label: string;
    };

    static displayName: string;

}

export const defaultTheme: {
    palette: {
        secondary: {
            contrastText: string;
            dark: string;
            light: string;
            main: string;
        };
    };
    typography: {
        title: {
            fontWeight: number;
        };
    };
};

export function AutocompleteArrayInput(props: any): any;

export function AutocompleteInput(props: any): any;

export function BooleanInput(props: any): any;

export function BulkDeleteButton(_a: any): any;

export function CheckboxGroupInput(props: any): any;

export function Create(props: any): any;

export function CreateActions(_a: any): any;

export function DatagridCell(_a: any): any;

export function DatagridLoading(_a: any): any;

export function DateInput(props: any): any;

export function DateTimeInput(props: any): any;

export function DeleteButton(_a: any): any;

export function DisabledInput(props: any): any;

export function Edit(props: any): any;

export function EditActions(_a: any): any;

export function FileInput(props: any): any;

export function Headroom(_a: any): any;

export function ImageInput(props: any): any;

export function List(props: any): any;

export function ListButton(_a: any): any;

export function LongTextInput(props: any): any;

export function NullableBooleanInput(props: any): any;

export function NumberInput(props: any): any;

export function RadioButtonGroupInput(props: any): any;

export function RecordTitle(_a: any): any;

export function ReferenceArrayInput(props: any): any;

export function ReferenceInput(props: any): any;

export function ReferenceManyField(_a: any): any;

export function SelectArrayInput(props: any): any;

export function SelectInput(props: any): any;

export function Show(props: any): any;

export function ShowActions(_a: any): any;

export function SimpleShowLayout(_a: any): any;

export function TabbedForm(props: any): any;

export function TabbedShowLayout(props: any): any;

export function TabbedShowLayoutTabs(_a: any): any;

export function TextInput(props: any): any;

export function TitleForRecord(_a: any): any;

export function ViewTitle(_a: any): any;

export namespace AppBar {
    class Naked {
        constructor(props: any, context: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        render(): any;

        static contextTypes: {
        };

        static displayName: string;

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        class Naked {
            constructor(props: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            getWidth(...args: any[]): any;

            render(): any;

            static displayName: string;

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.Naked.Naked.propTypes
                const initialWidth: any;

                // Too-deep object hierarchy from ra_ui_materialui.AppBar.Naked.Naked.propTypes
                const theme: any;

                // Too-deep object hierarchy from ra_ui_materialui.AppBar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.Naked.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(props: any, context: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            render(): any;

            static contextTypes: {
            };

            static displayName: string;

        }

        namespace Naked {
            class Naked {
                constructor(props: any);

                componentDidMount(): void;

                componentWillUnmount(): void;

                getWidth(...args: any[]): any;

                render(): any;

                static displayName: any;

                static propTypes: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.Naked.propTypes
                const innerRef: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.AppBar.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace AppBarMobile {
    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        // static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function toggleSidebar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.Naked.propTypes
                const title: any;

                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.Naked.propTypes
                const toggleSidebar: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.AppBarMobile.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ArrayField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ArrayInput {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentDidUpdate(prevProps: any): void;

        render(): any;

    }

    namespace WrappedComponent {
        namespace propTypes {
            function decoratedComponent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function initializeForm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace decoratedComponent {
                // Too-deep object hierarchy from ra_ui_materialui.ArrayInput.WrappedComponent.propTypes.decoratedComponent
                const isRequired: any;

            }

            namespace defaultValue {
                // Too-deep object hierarchy from ra_ui_materialui.ArrayInput.WrappedComponent.propTypes.defaultValue
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from ra_ui_materialui.ArrayInput.WrappedComponent.propTypes.input
                const isRequired: any;

            }

            namespace source {
                // Too-deep object hierarchy from ra_ui_materialui.ArrayInput.WrappedComponent.propTypes.source
                const isRequired: any;

            }

            namespace validate {
                // Too-deep object hierarchy from ra_ui_materialui.ArrayInput.WrappedComponent.propTypes.validate
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BooleanField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valueLabelFalse(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valueLabelTrue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valueLabelFalse {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valueLabelTrue {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkActions {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            children: {
                $$typeof: any;
                key: any;
                props: {
                    label: string;
                    undoable: boolean;
                };
                ref: any;
                type: any;
            };
            label: string;
            selectedIds: any[];
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteAction {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteButton {
    const defaultProps: {
        undoable: boolean;
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function undoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace undoable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteWithConfirmButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteWithUndoButton {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
            undoable: boolean;
        };

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function startUndoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace icon {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.Naked.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.Naked.propTypes.label
                const isRequired: any;

            }

            namespace startUndoable {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.Naked.propTypes.startUndoable
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(...args: any[]);

            render(): any;

            static defaultProps: {
                icon: {
                    $$typeof: any;
                    key: any;
                    props: {
                    };
                    ref: any;
                    type: any;
                };
                label: string;
                undoable: boolean;
            };

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const basePath: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const icon: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const label: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const resource: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const selectedIds: any;

                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const startUndoable: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.BulkDeleteWithUndoButton.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Button {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            color: string;
            size: string;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CardActions {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.CardActions.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.CardActions.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.CardActions.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CardContentInner {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.CardContentInner.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.CardContentInner.Naked.propTypes.className
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CheckboxGroupInput {
    const defaultProps: {
        fullWidth: boolean;
    };

}

export namespace ChipField {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        shouldComponentUpdate(nextProps: any): any;

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Confirm {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            cancel: string;
            classes: {
            };
            confirm: string;
            confirmColor: string;
            isOpen: boolean;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Create {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CreateActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CreateView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function save(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace save {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Datagrid {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            body: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            data: {
            };
            hasBulkActions: boolean;
            ids: any[];
            selectedIds: any[];
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function body(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function currentSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function expand(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hover(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function setSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function total(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace currentSort {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.currentSort
                const isRequired: any;

            }

            namespace expand {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.expand
                const isRequired: any;

            }

            namespace hover {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.hover
                const isRequired: any;

            }

            namespace isLoading {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.isLoading
                const isRequired: any;

            }

            namespace onSelect {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.onSelect
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace rowClick {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.rowClick
                const isRequired: any;

            }

            namespace rowStyle {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.rowStyle
                const isRequired: any;

            }

            namespace setSort {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.setSort
                const isRequired: any;

            }

            namespace total {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.total
                const isRequired: any;

            }

            namespace version {
                // Too-deep object hierarchy from ra_ui_materialui.Datagrid.Naked.propTypes.version
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DatagridCell {
    const displayName: string;

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function field(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace field {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DatagridRow {
    class WrappedComponent {
        constructor(props: any);

        render(): any;

        static defaultProps: {
            hasBulkActions: boolean;
            hover: boolean;
            record: {
            };
            selected: boolean;
        };

        static displayName: string;

    }

    namespace WrappedComponent {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function expand(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hover(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function push(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selected(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function style(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function styles(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.basePath
                const isRequired: any;

            }

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace expand {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.expand
                const isRequired: any;

            }

            namespace hover {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.hover
                const isRequired: any;

            }

            namespace id {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.id
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace push {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.push
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.resource
                const isRequired: any;

            }

            namespace rowClick {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.rowClick
                const isRequired: any;

            }

            namespace selected {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.selected
                const isRequired: any;

            }

            namespace style {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.style
                const isRequired: any;

            }

            namespace styles {
                // Too-deep object hierarchy from ra_ui_materialui.DatagridRow.WrappedComponent.propTypes.styles
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DateField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function locales(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function showTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace locales {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace options {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace showTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteButton {
    const defaultProps: {
        undoable: boolean;
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function undoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace undoable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteWithConfirmButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteWithUndoButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Edit {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function save(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace save {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EmailField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Error {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ExportButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
            maxResults: number;
        };

    }

    namespace WrappedComponent {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function dispatch(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxResults(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.basePath
                const isRequired: any;

            }

            namespace dispatch {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.dispatch
                const isRequired: any;

            }

            namespace exporter {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.exporter
                const isRequired: any;

            }

            namespace filter {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.filter
                const isRequired: any;

            }

            namespace icon {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.label
                const isRequired: any;

            }

            namespace sort {
                // Too-deep object hierarchy from ra_ui_materialui.ExportButton.WrappedComponent.propTypes.sort
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FileField {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function target(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace target {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Filter {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        renderButton(): any;

        renderForm(): any;

    }

    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function context(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function displayedFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hideFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function setFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function showFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.children
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace context {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.context
                const isRequired: any;

            }

            namespace displayedFilters {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.displayedFilters
                const isRequired: any;

            }

            namespace filterValues {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.filterValues
                const isRequired: any;

            }

            namespace hideFilter {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.hideFilter
                const isRequired: any;

            }

            namespace setFilters {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.setFilters
                const isRequired: any;

            }

            namespace showFilter {
                // Too-deep object hierarchy from ra_ui_materialui.Filter.Naked.propTypes.showFilter
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FilterForm {
    namespace Naked {
        const displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FormInput {
    namespace Naked {
        const displayName: string;

        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.FormInput.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.FormInput.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from ra_ui_materialui.FormInput.Naked.propTypes.input
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FunctionField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Header {
    namespace Naked {
        namespace propTypes {
            function actionProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace actionProps {
                // Too-deep object hierarchy from ra_ui_materialui.Header.Naked.propTypes.actionProps
                const isRequired: any;

            }

            namespace actions {
                // Too-deep object hierarchy from ra_ui_materialui.Header.Naked.propTypes.actions
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.Header.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Header.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace title {
                // Too-deep object hierarchy from ra_ui_materialui.Header.Naked.propTypes.title
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Headroom {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    }

}

export namespace ImageField {
    namespace Naked {
        const displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Labeled {
    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fullWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function labelStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function meta(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace fullWidth {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.fullWidth
                const isRequired: any;

            }

            namespace id {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.id
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.input
                const isRequired: any;

            }

            namespace isRequired {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.isRequired
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.label
                const isRequired: any;

            }

            namespace labelStyle {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.labelStyle
                const isRequired: any;

            }

            namespace meta {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.meta
                const isRequired: any;

            }

            namespace onChange {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.onChange
                const isRequired: any;

            }

            namespace record {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.record
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace source {
                // Too-deep object hierarchy from ra_ui_materialui.Labeled.Naked.propTypes.source
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Layout {
    namespace propTypes {
        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace theme {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LinearProgress {
    namespace Naked {
        const displayName: string;

        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.LinearProgress.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.LinearProgress.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Link {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function to(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from ra_ui_materialui.Link.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.Link.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Link.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace to {
                // Too-deep object hierarchy from ra_ui_materialui.Link.Naked.propTypes.to
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace List {
    const defaultProps: {
        filter: {
        };
        perPage: number;
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActionButtons(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterDefaultValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function location(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function match(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function pagination(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function path(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActionButtons {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterDefaultValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace pagination {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace path {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListButton {
    const defaultProps: {
        icon: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListToolbar {
    namespace Naked {
        const defaultProps: {
            classes: {
            };
        };

        namespace propTypes {
            function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function permanentFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace actions {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.actions
                const isRequired: any;

            }

            namespace bulkActions {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.bulkActions
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace exporter {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.exporter
                const isRequired: any;

            }

            namespace filters {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.filters
                const isRequired: any;

            }

            namespace permanentFilter {
                // Too-deep object hierarchy from ra_ui_materialui.ListToolbar.Naked.propTypes.permanentFilter
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActionButtons(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function currentSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function displayedFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterDefaultValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hideFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onUnselectItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function page(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function pagination(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function refresh(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setPerPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function showFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function total(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function translate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActionButtons {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace currentSort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace displayedFilters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace exporter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterDefaultValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hideFilter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace ids {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace isLoading {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSelect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onToggleItem {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onUnselectItems {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace page {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace pagination {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace perPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace refresh {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace selectedIds {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setFilters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setPerPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setSort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace showFilter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace total {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace translate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Loading {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            loadingPrimary: string;
            loadingSecondary: string;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoadingIndicator {
    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        // static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace isLoading {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.Naked.propTypes.isLoading
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.Naked.propTypes
                const isLoading: any;

                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.Naked.propTypes
                const width: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.LoadingIndicator.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Login {
    class Naked {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentDidUpdate(): void;

        lazyLoadBackgroundImage(): void;

        render(): any;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function loginForm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function staticContext(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace backgroundImage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace loginForm {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace staticContext {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace theme {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoginForm {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function redirectTo(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace redirectTo {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Logout {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirectTo(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirectTo {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LongTextInput {
    const defaultProps: {
        fullWidth: boolean;
        options: {
        };
    };

}

export namespace MenuItemLink {
    class Naked {
        constructor(...args: any[]);

        render(): any;

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function primaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function staticContext(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function to(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.MenuItemLink.Naked.propTypes.className
                const isRequired: any;

            }

            namespace leftIcon {
                // Too-deep object hierarchy from ra_ui_materialui.MenuItemLink.Naked.propTypes.leftIcon
                const isRequired: any;

            }

            namespace onClick {
                // Too-deep object hierarchy from ra_ui_materialui.MenuItemLink.Naked.propTypes.onClick
                const isRequired: any;

            }

            namespace primaryText {
                // Too-deep object hierarchy from ra_ui_materialui.MenuItemLink.Naked.propTypes.primaryText
                const isRequired: any;

            }

            namespace staticContext {
                // Too-deep object hierarchy from ra_ui_materialui.MenuItemLink.Naked.propTypes.staticContext
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NotFound {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NumberField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function locales(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace locales {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace options {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NumberInput {
    const defaultProps: {
        textAlign: string;
    };

}

export namespace RecordTitle {
    namespace propTypes {
        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceArrayField {
    namespace Naked {
        namespace propTypes {
            function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace addLabel {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceArrayField.Naked.propTypes.addLabel
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceArrayField.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceArrayField.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceArrayField.Naked.propTypes.label
                const isRequired: any;

            }

            namespace sortBy {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceArrayField.Naked.propTypes.sortBy
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace reference {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceField {
    namespace Naked {
        const defaultProps: {
            allowEmpty: boolean;
            classes: {
            };
            linkType: string;
            record: {
            };
        };

        namespace propTypes {
            function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function allowEmpty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function translateChoice(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace addLabel {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.addLabel
                const isRequired: any;

            }

            namespace cellClassName {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.cellClassName
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace headerClassName {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.headerClassName
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.label
                const isRequired: any;

            }

            namespace record {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.record
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace sortBy {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.sortBy
                const isRequired: any;

            }

            namespace translateChoice {
                // Too-deep object hierarchy from ra_ui_materialui.ReferenceField.Naked.propTypes.translateChoice
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceManyField {
    const defaultProps: {
        addLabel: boolean;
        filter: {
        };
        perPage: number;
        sort: {
            field: string;
            order: string;
        };
        source: string;
    };

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function target(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace perPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RefreshButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
        };

    }

    namespace WrappedComponent {
        namespace propTypes {
            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function refreshView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace icon {
                // Too-deep object hierarchy from ra_ui_materialui.RefreshButton.WrappedComponent.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from ra_ui_materialui.RefreshButton.WrappedComponent.propTypes.label
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RefreshIconButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Responsive {
    class Naked {
        constructor(props: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        getWidth(...args: any[]): any;

        render(): any;

        static displayName: string;

    }

    namespace Naked {
        namespace propTypes {
            function initialWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace initialWidth {
                // Too-deep object hierarchy from ra_ui_materialui.Responsive.Naked.propTypes.initialWidth
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from ra_ui_materialui.Responsive.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace propTypes {
        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RichTextField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function stripTags(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace stripTags {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SelectField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function choices(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function optionText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function optionValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function translateChoice(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace optionText {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace optionValue {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace translateChoice {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Show {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace isLoading {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Sidebar {
    class Naked {
        constructor(props: any, context: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        render(): any;

        static contextTypes: {
        };

        static displayName: string;

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        class Naked {
            constructor(props: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            getWidth(...args: any[]): any;

            render(): any;

            static displayName: string;

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.Naked.Naked.propTypes
                const initialWidth: any;

                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.Naked.Naked.propTypes
                const theme: any;

                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.Naked.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(props: any, context: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            render(): any;

            static contextTypes: {
            };

            static displayName: string;

        }

        namespace Naked {
            class Naked {
                constructor(props: any);

                componentDidMount(): void;

                componentWillUnmount(): void;

                getWidth(...args: any[]): any;

                render(): any;

                static displayName: any;

                static propTypes: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.Naked.propTypes
                const innerRef: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from ra_ui_materialui.Sidebar.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleForm {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleList {
    namespace Naked {
        const defaultProps: {
            hasBulkActions: boolean;
            linkType: string;
            selectedIds: any[];
        };

        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftAvatar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function primaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rightAvatar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rightIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function secondaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function tertiaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace data {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.data
                const isRequired: any;

            }

            namespace ids {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.ids
                const isRequired: any;

            }

            namespace leftAvatar {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.leftAvatar
                const isRequired: any;

            }

            namespace leftIcon {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.leftIcon
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace primaryText {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.primaryText
                const isRequired: any;

            }

            namespace rightAvatar {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.rightAvatar
                const isRequired: any;

            }

            namespace rightIcon {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.rightIcon
                const isRequired: any;

            }

            namespace secondaryText {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.secondaryText
                const isRequired: any;

            }

            namespace tertiaryText {
                // Too-deep object hierarchy from ra_ui_materialui.SimpleList.Naked.propTypes.tertiaryText
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleShowLayout {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SingleFieldList {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            classes: {
            };
            linkType: string;
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace data {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.data
                const isRequired: any;

            }

            namespace ids {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.ids
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from ra_ui_materialui.SingleFieldList.Naked.propTypes.resource
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedForm {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    const displayName: string;

    namespace propTypes {
        function wrappedComponentRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace wrappedComponentRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedShowLayout {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            tabs: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
        };

        static displayName: string;

    }

    const displayName: string;

    namespace propTypes {
        function wrappedComponentRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace wrappedComponentRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedShowLayoutTabs {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function match(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace match {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace value {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TextField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TitleForRecord {
    namespace propTypes {
        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Toolbar {
    class Naked {
        constructor(props: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        getWidth(...args: any[]): any;

        render(): any;

        // static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace Naked {
            const defaultProps: {
                submitOnEnter: boolean;
            };

            namespace propTypes {
                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const basePath: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const children: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const handleSubmit: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const handleSubmitWithRedirect: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const invalid: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const pristine: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const record: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const redirect: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const resource: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const saving: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const submitOnEnter: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const undoable: any;

                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function initialWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace initialWidth {
                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.propTypes.initialWidth
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from ra_ui_materialui.Toolbar.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace propTypes {
        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace UrlField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ViewTitle {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

