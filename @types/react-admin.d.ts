/** Declaration file generated by dts-gen */

declare module "react-admin"{
    /** Declaration file generated by dts-gen */

export class Admin {
    constructor(...args: any[]);

    render(): any;

    static displayName: string;

}

export class AppBar {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class AppBarMobile {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ArrayField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class ArrayInput {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class Authenticated {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class BooleanField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class BulkActions {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class BulkActionsToolbar {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class BulkDeleteAction {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static defaultProps: {
        label: string;
        undoable: boolean;
    };

    static displayName: string;

}

export class BulkDeleteWithConfirmButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class BulkDeleteWithUndoButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class Button {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class CardActions {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class CardContentInner {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ChipField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class CloneButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class Confirm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class CoreAdmin {
    constructor(...args: any[]);

    render(): any;

    static displayName: string;

}

export class CreateButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class CreateView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class DashboardMenuItem {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Datagrid {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class DatagridBody {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

    static muiName: string;

}

export class DatagridHeaderCell {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class DatagridRow {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class DateField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class DeleteWithConfirmButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class DeleteWithUndoButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class EditButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class EditGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class EditView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class EmailField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Error {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class ExportButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class FieldTitle {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class FileField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class Filter {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class FilterButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class FilterForm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class FormField {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class FormInput {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class FormTab {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class FunctionField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Header {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ImageField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class InferredElement {
    constructor(type: any, props: any, children: any);

    getElement(props: any): any;

    getProps(): any;

    getRepresentation(): any;

    isDefined(): any;

}

export class Labeled {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Layout {
    constructor(props: any);

    componentWillReceiveProps(nextProps: any): void;

    render(): any;

    static defaultProps: {
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

}

export class LinearProgress {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Link {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListActions {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class ListGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListToolbar {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class ListView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        actions: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        bulkActionButtons: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        classes: {
        };
        pagination: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
    };

    static displayName: string;

    static options: {
    };

}

export class Loading {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class LoadingIndicator {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class Login {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static defaultProps: {
        backgroundImage: string;
        loginForm: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

    static displayName: string;

    static options: {
    };

}

export class LoginForm {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Logout {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Menu {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class MenuItemLink {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Mutation {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class NotFound {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Notification {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class NumberField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
        textAlign: string;
    };

    static displayName: string;

}

export class Pagination {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class PaginationLimit {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class Query {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class ReferenceArrayField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class ReferenceArrayFieldController {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class ReferenceArrayInputController {
    constructor(...args: any[]);

    render(): any;

    static displayName: string;

}

export class ReferenceField {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

    static options: {
    };

}

export class ReferenceFieldController {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class ReferenceInputController {
    constructor(...args: any[]);

    render(): any;

    static displayName: string;

}

export class ReferenceManyFieldController {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class RefreshButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class RefreshIconButton {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class ResettableTextField {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Resource {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class Responsive {
    constructor(props: any, context: any);

    componentDidMount(): void;

    componentWillUnmount(): void;

    render(): any;

    static contextTypes: {
    };

    static displayName: string;

}

export class RichTextField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
        stripTags: boolean;
    };

    static displayName: string;

}

export class SaveButton {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SearchInput {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SelectField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class ShowButton {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static displayName: string;

}

export class ShowGuesser {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(props: any): any;

    static displayName: string;

    static options: {
    };

}

export class ShowView {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static defaultProps: {
        classes: {
        };
    };

    static displayName: string;

    static options: {
    };

}

export class Sidebar {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

    static options: {
    };

}

export class SimpleForm {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class SimpleFormIterator {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class SimpleList {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static Naked(_a: any): any;

    static displayName: string;

    static options: {
    };

}

export class SingleFieldList {
    constructor(props: any, context: any);

    attach(theme: any): void;

    componentDidMount(): void;

    componentDidUpdate(): void;

    componentWillUnmount(): void;

    detach(theme: any): void;

    getClasses(): any;

    render(): any;

    static displayName: string;

    static options: {
    };

}

export class Tab {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class TestContext {
    constructor(props: any);

    render(): any;

}

export class TextField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class Title {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
    };

    static displayName: string;

}

export class Toolbar {
    constructor(props: any, context: any);

    componentDidMount(): void;

    componentWillUnmount(): void;

    render(): any;

    static contextTypes: {
    };

    static displayName: string;

    static options: {
    };

}

export class TranslationProvider {
    constructor(props: any, context: any);

    addExtraProps(props: any): any;

    componentDidMount(): void;

    componentWillReceiveProps(nextProps: any): void;

    componentWillUnmount(): void;

    componentWillUpdate(): any;

    getChildContext(): any;

    getWrappedInstance(): any;

    initSelector(): void;

    initSubscription(): void;

    isSubscribed(): any;

    notifyNestedSubsOnComponentDidUpdate(): void;

    onStateChange(): void;

    render(): any;

    setWrappedInstance(ref: any): void;

    shouldComponentUpdate(): any;

    static displayName: string;

}

export class UrlField {
    constructor(...args: any[]);

    render(): any;

    shouldComponentUpdate(nextProps: any): any;

    static defaultProps: {
        addLabel: boolean;
    };

    static displayName: string;

}

export class UserMenu {
    constructor(...args: any[]);

    render(): any;

    static defaultProps: {
        icon: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
        label: string;
    };

    static displayName: string;

}

export const AUTH_CHECK: string;

export const AUTH_ERROR: string;

export const AUTH_GET_PERMISSIONS: string;

export const AUTH_LOGIN: string;

export const AUTH_LOGOUT: string;

export const BEFORE_LOCATION_CHANGE: string;

export const CHANGE_LOCALE: string;

export const CHANGE_LOCALE_FAILURE: string;

export const CHANGE_LOCALE_SUCCESS: string;

export const COMPLETE: string;

export const CREATE: string;

export const CRUD_CHANGE_LIST_PARAMS: string;

export const CRUD_CREATE: string;

export const CRUD_CREATE_FAILURE: string;

export const CRUD_CREATE_LOADING: string;

export const CRUD_CREATE_SUCCESS: string;

export const CRUD_DELETE: string;

export const CRUD_DELETE_FAILURE: string;

export const CRUD_DELETE_LOADING: string;

export const CRUD_DELETE_MANY: string;

export const CRUD_DELETE_MANY_FAILURE: string;

export const CRUD_DELETE_MANY_LOADING: string;

export const CRUD_DELETE_MANY_SUCCESS: string;

export const CRUD_DELETE_SUCCESS: string;

export const CRUD_GET_ALL: string;

export const CRUD_GET_ALL_FAILURE: string;

export const CRUD_GET_ALL_LOADING: string;

export const CRUD_GET_ALL_SUCCESS: string;

export const CRUD_GET_LIST: string;

export const CRUD_GET_LIST_FAILURE: string;

export const CRUD_GET_LIST_LOADING: string;

export const CRUD_GET_LIST_SUCCESS: string;

export const CRUD_GET_MANY: string;

export const CRUD_GET_MANY_ACCUMULATE: string;

export const CRUD_GET_MANY_FAILURE: string;

export const CRUD_GET_MANY_LOADING: string;

export const CRUD_GET_MANY_REFERENCE: string;

export const CRUD_GET_MANY_REFERENCE_FAILURE: string;

export const CRUD_GET_MANY_REFERENCE_LOADING: string;

export const CRUD_GET_MANY_REFERENCE_SUCCESS: string;

export const CRUD_GET_MANY_SUCCESS: string;

export const CRUD_GET_MATCHING: string;

export const CRUD_GET_MATCHING_ACCUMULATE: string;

export const CRUD_GET_MATCHING_FAILURE: string;

export const CRUD_GET_MATCHING_LOADING: string;

export const CRUD_GET_MATCHING_SUCCESS: string;

export const CRUD_GET_ONE: string;

export const CRUD_GET_ONE_FAILURE: string;

export const CRUD_GET_ONE_LOADING: string;

export const CRUD_GET_ONE_SUCCESS: string;

export const CRUD_HIDE_FILTER: string;

export const CRUD_SET_FILTER: string;

export const CRUD_SHOW_FILTER: string;

export const CRUD_UPDATE: string;

export const CRUD_UPDATE_FAILURE: string;

export const CRUD_UPDATE_LOADING: string;

export const CRUD_UPDATE_MANY: string;

export const CRUD_UPDATE_MANY_FAILURE: string;

export const CRUD_UPDATE_MANY_LOADING: string;

export const CRUD_UPDATE_MANY_SUCCESS: string;

export const CRUD_UPDATE_SUCCESS: string;

export const DEFAULT_LOCALE: string;

export const DELETE: string;

export const DELETE_MANY: string;

export const FETCH_CANCEL: string;

export const FETCH_END: string;

export const FETCH_ERROR: string;

export const FETCH_START: string;

export const GET_LIST: string;

export const GET_MANY: string;

export const GET_MANY_REFERENCE: string;

export const GET_ONE: string;

export const HIDE_NOTIFICATION: string;

export const INITIALIZE_FORM: string;

export const REDUX_FORM_NAME: string;

export const REFRESH_VIEW: string;

export const REGISTER_RESOURCE: string;

export const RESET_FORM: string;

export const SET_LIST_SELECTED_IDS: string;

export const SET_SIDEBAR_VISIBILITY: string;

export const SHOW_NOTIFICATION: string;

export const START_OPTIMISTIC_MODE: string;

export const STOP_OPTIMISTIC_MODE: string;

export const TOGGLE_LIST_ITEM: string;

export const TOGGLE_SIDEBAR: string;

export const TranslationContext: {
    $$typeof: any;
    Consumer: {
        $$typeof: any;
        Consumer: any;
        Provider: {
            $$typeof: any;
        };
    };
    Provider: {
        $$typeof: any;
    };
};

export const UNDO: string;

export const UNDOABLE: string;

export const UNREGISTER_RESOURCE: string;

export const UPDATE: string;

export const UPDATE_MANY: string;

export const USER_CHECK: string;

export const USER_CHECK_SUCCESS: string;

export const USER_LOGIN: string;

export const USER_LOGIN_FAILURE: string;

export const USER_LOGIN_LOADING: string;

export const USER_LOGIN_SUCCESS: string;

export const USER_LOGOUT: string;

export const defaultTheme: {
    palette: {
        secondary: {
            contrastText: string;
            dark: string;
            light: string;
            main: string;
        };
    };
    typography: {
        title: {
            fontWeight: number;
        };
    };
};

export const fetchActionsWithArrayOfIdentifiedRecordsResponse: string[];

export const fetchActionsWithArrayOfRecordsResponse: string[];

export const fetchActionsWithRecordResponse: string[];

export const fetchActionsWithTotalResponse: string[];

export function AdminRouter(ownerProps: any, context: any): any;

export function AutocompleteArrayInput(props: any): any;

export function AutocompleteInput(props: any): any;

export function BooleanInput(props: any): any;

export function BulkDeleteButton(_a: any): any;

export function CheckboxGroupInput(props: any): any;

export function CoreAdminRouter(ownerProps: any, context: any): any;

export function Create(props: any): any;

export function CreateActions(_a: any): any;

export function CreateController(props: any): any;

export function DatagridCell(_a: any): any;

export function DatagridLoading(_a: any): any;

export function DateInput(props: any): any;

export function DateTimeInput(props: any): any;

export function DeleteButton(_a: any): any;

export function DisabledInput(props: any): any;

export function Edit(props: any): any;

export function EditActions(_a: any): any;

export function EditController(props: any): any;

export function FileInput(props: any): any;

export function FormDataConsumer(props: any): any;

export function Headroom(_a: any): any;

export function HttpError(message: any, status: any, body: any): any;

export function ImageInput(props: any): any;

export function List(props: any): any;

export function ListButton(_a: any): any;

export function ListController(props: any): any;

export function LongTextInput(props: any): any;

export function NullableBooleanInput(props: any): any;

export function NumberInput(props: any): any;

export function RadioButtonGroupInput(props: any): any;

export function RecordTitle(_a: any): any;

export function ReferenceArrayInput(props: any): any;

export function ReferenceInput(props: any): any;

export function ReferenceManyField(_a: any): any;

export function RoutesWithLayout(_a: any): any;

export function SelectArrayInput(props: any): any;

export function SelectInput(props: any): any;

export function Show(props: any): any;

export function ShowActions(_a: any): any;

export function ShowController(props: any): any;

export function SimpleShowLayout(_a: any): any;

export function TabbedForm(props: any): any;

export function TabbedShowLayout(props: any): any;

export function TabbedShowLayoutTabs(_a: any): any;

export function TextInput(props: any): any;

export function TitleForRecord(_a: any): any;

export function ViewTitle(_a: any): any;

export function WithPermissions(ownerProps: any, context: any): any;

export function accumulateSaga(): any;

export function addField(BaseComponent: any, fieldProps: any): any;

export function adminReducer(...args: any[]): any;

export function adminSaga(dataProvider: any, authProvider: any, i18nProvider: any): any;

export function authSaga(authProvider: any): any;

export function beforeLocationChange(_a: any): any;

export function callbackSaga(): any;

export function changeListParams(resource: any, params: any): any;

export function changeLocale(locale: any): any;

export function changeLocaleFailure(locale: any, error: any): any;

export function changeLocaleSuccess(locale: any, messages: any): any;

export function choices(...args: any[]): any;

export function complete(): any;

export function createAdminStore(_a: any): any;

export function createAppReducer(customReducers: any, locale: any, messages: any): any;

export function crudCreate(resource: any, data: any, basePath: any, redirectTo: any): any;

export function crudDelete(resource: any, id: any, previousData: any, basePath: any, redirectTo: any, refresh: any): any;

export function crudDeleteMany(resource: any, ids: any, basePath: any, refresh: any): any;

export function crudGetAll(resource: any, sort: any, filter: any, maxResults: any, callback: any): any;

export function crudGetList(resource: any, pagination: any, sort: any, filter: any): any;

export function crudGetMany(resource: any, ids: any): any;

export function crudGetManyAccumulate(resource: any, ids: any): any;

export function crudGetManyReference(reference: any, target: any, id: any, relatedTo: any, pagination: any, sort: any, filter: any, source: any): any;

export function crudGetMatching(reference: any, relatedTo: any, pagination: any, sort: any, filter: any): any;

export function crudGetMatchingAccumulate(reference: any, relatedTo: any, pagination: any, sort: any, filter: any): any;

export function crudGetOne(resource: any, id: any, basePath: any, refresh: any): any;

export function crudUpdate(resource: any, id: any, data: any, previousData: any, basePath: any, redirectTo: any, refresh: any): any;

export function crudUpdateMany(resource: any, ids: any, data: any, basePath: any, refresh: any): any;

export function defaultI18nProvider(locale: any): any;

export function downloadCSV(csv: any, filename: any): void;

export function email(...args: any[]): any;

export function errorSaga(): any;

export function fetchCancel(): any;

export function fetchEnd(): any;

export function fetchError(): any;

export function fetchSaga(dataProvider: any): any;

export function fetchStart(): any;

export function formMiddleware(): any;

export function getDefaultValues(...args: any[]): any;

export function getElementsFromRecords(records: any, types: any): any;

export function getFetchedAt(newRecordIds: any, oldRecordFetchedAt: any, now: any, cacheDuration: any): any;

export function getFieldLabelTranslationArgs(options: any): any;

export function getIds(state: any, relatedTo: any): any;

export function getListControllerProps(props: any): any;

export function getLocale(state: any): any;

export function getNotification(state: any): any;

export function getPossibleReferenceValues(state: any, props: any): any;

export function getPossibleReferences(referenceState: any, possibleValues: any, selectedIds: any): any;

export function getReferenceResource(state: any, props: any): any;

export function getReferences(state: any, reference: any, relatedTo: any): any;

export function getReferencesByIds(state: any, reference: any, ids: any): any;

export function getResources(state: any): any;

export function hideFilter(resource: any, field: any): any;

export function hideNotification(): any;

export function i18nReducer(initialLocale: any, defaultMessages: any): any;

export function i18nSaga(i18nProvider: any): any;

export function initializeForm(initialValues: any): any;

export function isRequired(validate: any): any;

export function linkToRecord(basePath: any, id: any, linkType: any): any;

export function maxLength(...args: any[]): any;

export function maxValue(...args: any[]): any;

export function mergeTranslations(...args: any[]): any;

export function minLength(...args: any[]): any;

export function minValue(...args: any[]): any;

export function nameRelatedTo(reference: any, id: any, resource: any, target: any, filter: any): any;

export function notificationSaga(): any;

export function number(...args: any[]): any;

export function queryReducer(previousState: any, _a: any): any;

export function redirectionSaga(): any;

export function refreshSaga(): any;

export function refreshView(): any;

export function regex(...args: any[]): any;

export function registerResource(resource: any): any;

export function removeEmpty(object: any): any;

export function removeKey(target: any, path: any): any;

export function required(...args: any[]): any;

export function resetForm(): any;

export function resolveBrowserLocale(defaultLocale: any): any;

export function resolveRedirectTo(redirectTo: any, basePath: any, id: any, data: any): any;

export function sanitizeListRestProps(props: any): any;

export function setFilter(resource: any, field: any, value: any): any;

export function setListSelectedIds(resource: any, ids: any): any;

export function setSidebarVisibility(isOpen: any): any;

export function showFilter(resource: any, field: any): any;

export function showNotification(message: any, type: any, notificationOptions: any): any;

export function startOptimisticMode(): any;

export function startUndoable(action: any): any;

export function stopOptimisticMode(): any;

export function toggleListItem(resource: any, id: any): any;

export function toggleSidebar(): any;

export function translate(BaseComponent: any, ...args: any[]): any;

export function undo(): any;

export function undoSaga(): any;

export function unloadSaga(): any;

export function unregisterResource(resourceName: any): any;

export function userCheck(payload: any, pathName: any, routeParams: any): any;

export function userLogin(payload: any, pathName: any): any;

export function userLogout(redirectTo: any): any;

export function warning(condition: any, message: any): void;

export function withDataProvider(Component: any): any;

export function withDefaultValue(DecoratedComponent: any): any;

export function withTranslate(BaseComponent: any, ...args: any[]): any;

export namespace Admin {
    namespace childContextTypes {
        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace defaultProps {
        class appLayout {
            constructor(props: any);

            componentWillReceiveProps(nextProps: any): void;

            render(): any;

            static defaultProps: {
                theme: {
                    palette: {
                        secondary: {
                            contrastText: string;
                            dark: string;
                            light: string;
                            main: string;
                        };
                    };
                    typography: {
                        title: {
                            fontWeight: number;
                        };
                    };
                };
            };

        }

        class catchAll {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        class loading {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        class loginPage {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static defaultProps: {
                backgroundImage: string;
                loginForm: {
                    $$typeof: any;
                    key: any;
                    props: {
                    };
                    ref: any;
                    type: any;
                };
                theme: {
                    palette: {
                        secondary: {
                            contrastText: string;
                            dark: string;
                            light: string;
                            main: string;
                        };
                    };
                    typography: {
                        title: {
                            fontWeight: number;
                        };
                    };
                };
            };

            static displayName: string;

            static options: {
            };

        }

        class logoutButton {
            constructor(...args: any[]);

            render(): any;

            static defaultProps: {
            };

            static displayName: string;

        }

        namespace appLayout {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.appLayout.propTypes
                const theme: any;

            }

        }

        namespace catchAll {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.catchAll.propTypes
                const innerRef: any;

            }

        }

        namespace loading {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loading.propTypes
                const innerRef: any;

            }

        }

        namespace loginPage {
            class Naked {
                constructor(...args: any[]);

                componentDidMount(): void;

                componentDidUpdate(): void;

                lazyLoadBackgroundImage(): void;

                render(): any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.propTypes
                const backgroundImage: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.propTypes
                const loginForm: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.propTypes
                const staticContext: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.loginPage.propTypes
                const theme: any;

            }

        }

        namespace logoutButton {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Admin.defaultProps.logoutButton.propTypes
                const className: any;

                // Too-deep object hierarchy from react_admin.Admin.defaultProps.logoutButton.propTypes
                const redirectTo: any;

            }

        }

    }

}

export namespace AdminRouter {
    const displayName: string;

    namespace contextTypes {
        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace defaultProps {
        class loading {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        namespace loading {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.AdminRouter.defaultProps.loading.propTypes
                const innerRef: any;

            }

        }

    }

}

export namespace AppBar {
    class Naked {
        constructor(props: any, context: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        render(): any;

        static contextTypes: {
        };

        static displayName: string;

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        class Naked {
            constructor(props: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            getWidth(...args: any[]): any;

            render(): any;

            static displayName: string;

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.AppBar.Naked.Naked.propTypes
                const initialWidth: any;

                // Too-deep object hierarchy from react_admin.AppBar.Naked.Naked.propTypes
                const theme: any;

                // Too-deep object hierarchy from react_admin.AppBar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.AppBar.Naked.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(props: any, context: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            render(): any;

            static contextTypes: {
            };

            static displayName: string;

        }

        namespace Naked {
            class Naked {
                constructor(props: any);

                componentDidMount(): void;

                componentWillUnmount(): void;

                getWidth(...args: any[]): any;

                render(): any;

                static displayName: any;

                static propTypes: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.Naked.propTypes
                const innerRef: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.AppBar.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace AppBarMobile {
    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function toggleSidebar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from react_admin.AppBarMobile.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.AppBarMobile.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.Naked.propTypes
                const title: any;

                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.Naked.propTypes
                const toggleSidebar: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.AppBarMobile.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ArrayField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ArrayInput {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentDidUpdate(prevProps: any): void;

        render(): any;

    }

    namespace WrappedComponent {
        namespace propTypes {
            function decoratedComponent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function initializeForm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace decoratedComponent {
                // Too-deep object hierarchy from react_admin.ArrayInput.WrappedComponent.propTypes.decoratedComponent
                const isRequired: any;

            }

            namespace defaultValue {
                // Too-deep object hierarchy from react_admin.ArrayInput.WrappedComponent.propTypes.defaultValue
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from react_admin.ArrayInput.WrappedComponent.propTypes.input
                const isRequired: any;

            }

            namespace source {
                // Too-deep object hierarchy from react_admin.ArrayInput.WrappedComponent.propTypes.source
                const isRequired: any;

            }

            namespace validate {
                // Too-deep object hierarchy from react_admin.ArrayInput.WrappedComponent.propTypes.validate
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Authenticated {
    class WrappedComponent {
        constructor(...args: any[]);

        checkAuthentication(params: any): void;

        componentWillMount(): void;

        componentWillReceiveProps(nextProps: any): void;

        render(): any;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BooleanField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valueLabelFalse(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valueLabelTrue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valueLabelFalse {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valueLabelTrue {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkActions {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            children: {
                $$typeof: any;
                key: any;
                props: {
                    label: string;
                    undoable: boolean;
                };
                ref: any;
                type: any;
            };
            label: string;
            selectedIds: any[];
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteAction {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteButton {
    const defaultProps: {
        undoable: boolean;
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function undoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace undoable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteWithConfirmButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BulkDeleteWithUndoButton {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
            undoable: boolean;
        };

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function startUndoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace icon {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.Naked.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.Naked.propTypes.label
                const isRequired: any;

            }

            namespace startUndoable {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.Naked.propTypes.startUndoable
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(...args: any[]);

            render(): any;

            static defaultProps: {
                icon: {
                    $$typeof: any;
                    key: any;
                    props: {
                    };
                    ref: any;
                    type: any;
                };
                label: string;
                undoable: boolean;
            };

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const basePath: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const icon: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const label: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const resource: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const selectedIds: any;

                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.Naked.propTypes
                const startUndoable: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.BulkDeleteWithUndoButton.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Button {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            color: string;
            size: string;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CardActions {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from react_admin.CardActions.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.CardActions.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.CardActions.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CardContentInner {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from react_admin.CardContentInner.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.CardContentInner.Naked.propTypes.className
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CheckboxGroupInput {
    const defaultProps: {
        fullWidth: boolean;
    };

}

export namespace ChipField {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        shouldComponentUpdate(nextProps: any): any;

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Confirm {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            cancel: string;
            classes: {
            };
            confirm: string;
            confirmColor: string;
            isOpen: boolean;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CoreAdmin {
    namespace childContextTypes {
        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace defaultProps {
        class appLayout {
            constructor(props: any);

            componentWillReceiveProps(nextProps: any): void;

            render(): any;

            static defaultProps: {
                theme: {
                    palette: {
                        secondary: {
                            contrastText: string;
                            dark: string;
                            light: string;
                            main: string;
                        };
                    };
                    typography: {
                        title: {
                            fontWeight: number;
                        };
                    };
                };
            };

        }

        class catchAll {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        class loading {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        class loginPage {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static defaultProps: {
                backgroundImage: string;
                loginForm: {
                    $$typeof: any;
                    key: any;
                    props: {
                    };
                    ref: any;
                    type: any;
                };
                theme: {
                    palette: {
                        secondary: {
                            contrastText: string;
                            dark: string;
                            light: string;
                            main: string;
                        };
                    };
                    typography: {
                        title: {
                            fontWeight: number;
                        };
                    };
                };
            };

            static displayName: string;

            static options: {
            };

        }

        class logoutButton {
            constructor(...args: any[]);

            render(): any;

            static defaultProps: {
            };

            static displayName: string;

        }

        namespace appLayout {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.appLayout.propTypes
                const theme: any;

            }

        }

        namespace catchAll {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.catchAll.propTypes
                const innerRef: any;

            }

        }

        namespace loading {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loading.propTypes
                const innerRef: any;

            }

        }

        namespace loginPage {
            class Naked {
                constructor(...args: any[]);

                componentDidMount(): void;

                componentDidUpdate(): void;

                lazyLoadBackgroundImage(): void;

                render(): any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.propTypes
                const backgroundImage: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.propTypes
                const loginForm: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.propTypes
                const staticContext: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.loginPage.propTypes
                const theme: any;

            }

        }

        namespace logoutButton {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.logoutButton.propTypes
                const className: any;

                // Too-deep object hierarchy from react_admin.CoreAdmin.defaultProps.logoutButton.propTypes
                const redirectTo: any;

            }

        }

    }

}

export namespace CoreAdminRouter {
    const displayName: string;

    namespace contextTypes {
        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace defaultProps {
        class loading {
            constructor(props: any, context: any);

            attach(theme: any): void;

            componentDidMount(): void;

            componentDidUpdate(): void;

            componentWillUnmount(): void;

            detach(theme: any): void;

            getClasses(): any;

            render(): any;

            static displayName: string;

            static options: {
            };

        }

        namespace loading {
            class Naked {
                constructor(...args: any[]);

                render(): any;

                static defaultProps: any;

                static displayName: any;

            }

            namespace contextTypes {
                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.contextTypes
                // const 64a55d578f856d258dc345b094a2a2b3: any;

                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.contextTypes
                // const 6fc570d6bd61383819d0f9e7407c452d: any;

                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.contextTypes
                const b768b78919504fba9de2c03545c5cd3a: any;

                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.contextTypes
                const d4bd0baacbc52bbd48bbb9eb24344ecd: any;

                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.contextTypes
                const muiThemeProviderOptions: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.CoreAdminRouter.defaultProps.loading.propTypes
                const innerRef: any;

            }

        }

    }

}

export namespace Create {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CreateActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CreateView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function save(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace save {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Datagrid {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            body: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            data: {
            };
            hasBulkActions: boolean;
            ids: any[];
            selectedIds: any[];
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function body(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function currentSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function expand(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hover(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function setSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function total(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace currentSort {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.currentSort
                const isRequired: any;

            }

            namespace expand {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.expand
                const isRequired: any;

            }

            namespace hover {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.hover
                const isRequired: any;

            }

            namespace isLoading {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.isLoading
                const isRequired: any;

            }

            namespace onSelect {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.onSelect
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace rowClick {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.rowClick
                const isRequired: any;

            }

            namespace rowStyle {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.rowStyle
                const isRequired: any;

            }

            namespace setSort {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.setSort
                const isRequired: any;

            }

            namespace total {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.total
                const isRequired: any;

            }

            namespace version {
                // Too-deep object hierarchy from react_admin.Datagrid.Naked.propTypes.version
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DatagridCell {
    const displayName: string;

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function field(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace field {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DatagridRow {
    class WrappedComponent {
        constructor(props: any);

        render(): any;

        static defaultProps: {
            hasBulkActions: boolean;
            hover: boolean;
            record: {
            };
            selected: boolean;
        };

        static displayName: string;

    }

    namespace WrappedComponent {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function expand(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hover(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function push(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selected(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function style(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function styles(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.basePath
                const isRequired: any;

            }

            namespace children {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace expand {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.expand
                const isRequired: any;

            }

            namespace hover {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.hover
                const isRequired: any;

            }

            namespace id {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.id
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace push {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.push
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.resource
                const isRequired: any;

            }

            namespace rowClick {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.rowClick
                const isRequired: any;

            }

            namespace selected {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.selected
                const isRequired: any;

            }

            namespace style {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.style
                const isRequired: any;

            }

            namespace styles {
                // Too-deep object hierarchy from react_admin.DatagridRow.WrappedComponent.propTypes.styles
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DateField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function locales(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function showTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace locales {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace options {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace showTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteButton {
    const defaultProps: {
        undoable: boolean;
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function undoable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace undoable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteWithConfirmButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DeleteWithUndoButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Edit {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EditView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function save(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace save {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace EmailField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Error {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ExportButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
            maxResults: number;
        };

    }

    namespace WrappedComponent {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function dispatch(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxResults(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.basePath
                const isRequired: any;

            }

            namespace dispatch {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.dispatch
                const isRequired: any;

            }

            namespace exporter {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.exporter
                const isRequired: any;

            }

            namespace filter {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.filter
                const isRequired: any;

            }

            namespace icon {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.label
                const isRequired: any;

            }

            namespace sort {
                // Too-deep object hierarchy from react_admin.ExportButton.WrappedComponent.propTypes.sort
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FileField {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function target(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace target {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Filter {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        renderButton(): any;

        renderForm(): any;

    }

    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function context(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function displayedFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hideFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function setFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function showFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.children
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace context {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.context
                const isRequired: any;

            }

            namespace displayedFilters {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.displayedFilters
                const isRequired: any;

            }

            namespace filterValues {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.filterValues
                const isRequired: any;

            }

            namespace hideFilter {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.hideFilter
                const isRequired: any;

            }

            namespace setFilters {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.setFilters
                const isRequired: any;

            }

            namespace showFilter {
                // Too-deep object hierarchy from react_admin.Filter.Naked.propTypes.showFilter
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FilterForm {
    namespace Naked {
        const displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FormField {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentDidUpdate(prevProps: any): void;

        render(): any;

    }

    namespace WrappedComponent {
        namespace propTypes {
            function decoratedComponent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function initializeForm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace decoratedComponent {
                // Too-deep object hierarchy from react_admin.FormField.WrappedComponent.propTypes.decoratedComponent
                const isRequired: any;

            }

            namespace defaultValue {
                // Too-deep object hierarchy from react_admin.FormField.WrappedComponent.propTypes.defaultValue
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from react_admin.FormField.WrappedComponent.propTypes.input
                const isRequired: any;

            }

            namespace source {
                // Too-deep object hierarchy from react_admin.FormField.WrappedComponent.propTypes.source
                const isRequired: any;

            }

            namespace validate {
                // Too-deep object hierarchy from react_admin.FormField.WrappedComponent.propTypes.validate
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FormInput {
    namespace Naked {
        const displayName: string;

        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from react_admin.FormInput.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.FormInput.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from react_admin.FormInput.Naked.propTypes.input
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FunctionField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Header {
    namespace Naked {
        namespace propTypes {
            function actionProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace actionProps {
                // Too-deep object hierarchy from react_admin.Header.Naked.propTypes.actionProps
                const isRequired: any;

            }

            namespace actions {
                // Too-deep object hierarchy from react_admin.Header.Naked.propTypes.actions
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.Header.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.Header.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace title {
                // Too-deep object hierarchy from react_admin.Header.Naked.propTypes.title
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Headroom {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    }

}

export namespace HttpError {
    const stackTraceLimit: number;

    function captureStackTrace(p0: any, p1: any): any;

}

export namespace ImageField {
    namespace Naked {
        const displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Labeled {
    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fullWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function input(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function labelStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function meta(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace children {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace fullWidth {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.fullWidth
                const isRequired: any;

            }

            namespace id {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.id
                const isRequired: any;

            }

            namespace input {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.input
                const isRequired: any;

            }

            namespace isRequired {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.isRequired
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.label
                const isRequired: any;

            }

            namespace labelStyle {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.labelStyle
                const isRequired: any;

            }

            namespace meta {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.meta
                const isRequired: any;

            }

            namespace onChange {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.onChange
                const isRequired: any;

            }

            namespace record {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.record
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace source {
                // Too-deep object hierarchy from react_admin.Labeled.Naked.propTypes.source
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Layout {
    namespace propTypes {
        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace theme {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LinearProgress {
    namespace Naked {
        const displayName: string;

        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from react_admin.LinearProgress.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.LinearProgress.Naked.propTypes.classes
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Link {
    namespace Naked {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function to(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                // Too-deep object hierarchy from react_admin.Link.Naked.propTypes.children
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.Link.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.Link.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace to {
                // Too-deep object hierarchy from react_admin.Link.Naked.propTypes.to
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace List {
    const defaultProps: {
        filter: {
        };
        perPage: number;
        theme: {
            palette: {
                secondary: {
                    contrastText: string;
                    dark: string;
                    light: string;
                    main: string;
                };
            };
            typography: {
                title: {
                    fontWeight: number;
                };
            };
        };
    };

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActionButtons(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterDefaultValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function location(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function match(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function pagination(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function path(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActionButtons {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterDefaultValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace pagination {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace path {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListButton {
    const defaultProps: {
        icon: {
            $$typeof: any;
            key: any;
            props: {
            };
            ref: any;
            type: any;
        };
    };

    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace icon {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListToolbar {
    namespace Naked {
        const defaultProps: {
            classes: {
            };
        };

        namespace propTypes {
            function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function permanentFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace actions {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.actions
                const isRequired: any;

            }

            namespace bulkActions {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.bulkActions
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace exporter {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.exporter
                const isRequired: any;

            }

            namespace filters {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.filters
                const isRequired: any;

            }

            namespace permanentFilter {
                // Too-deep object hierarchy from react_admin.ListToolbar.Naked.propTypes.permanentFilter
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ListView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActionButtons(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function bulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function currentSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function displayedFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function exporter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterDefaultValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filterValues(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hideFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onUnselectItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function page(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function pagination(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function refresh(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setFilters(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setPerPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function setSort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function showFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function total(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function translate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActionButtons {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace bulkActions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace currentSort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace displayedFilters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace exporter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterDefaultValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filterValues {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hideFilter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace ids {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace isLoading {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSelect {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onToggleItem {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onUnselectItems {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace page {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace pagination {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace perPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace refresh {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace selectedIds {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setFilters {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setPerPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace setSort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace showFilter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace total {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace translate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Loading {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            loadingPrimary: string;
            loadingSecondary: string;
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoadingIndicator {
    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace isLoading {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.Naked.propTypes.isLoading
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.Naked.propTypes
                const isLoading: any;

                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.Naked.propTypes
                const width: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.LoadingIndicator.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Login {
    class Naked {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentDidUpdate(): void;

        lazyLoadBackgroundImage(): void;

        render(): any;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function loginForm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function staticContext(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace backgroundImage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace loginForm {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace staticContext {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace theme {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoginForm {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function redirectTo(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace redirectTo {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Logout {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function redirectTo(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace redirectTo {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LongTextInput {
    const defaultProps: {
        fullWidth: boolean;
        options: {
        };
    };

}

export namespace MenuItemLink {
    class Naked {
        constructor(...args: any[]);

        render(): any;

    }

    namespace Naked {
        namespace propTypes {
            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function primaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function staticContext(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function to(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace className {
                // Too-deep object hierarchy from react_admin.MenuItemLink.Naked.propTypes.className
                const isRequired: any;

            }

            namespace leftIcon {
                // Too-deep object hierarchy from react_admin.MenuItemLink.Naked.propTypes.leftIcon
                const isRequired: any;

            }

            namespace onClick {
                // Too-deep object hierarchy from react_admin.MenuItemLink.Naked.propTypes.onClick
                const isRequired: any;

            }

            namespace primaryText {
                // Too-deep object hierarchy from react_admin.MenuItemLink.Naked.propTypes.primaryText
                const isRequired: any;

            }

            namespace staticContext {
                // Too-deep object hierarchy from react_admin.MenuItemLink.Naked.propTypes.staticContext
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Mutation {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NotFound {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NumberField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function locales(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace locales {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace options {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace NumberInput {
    const defaultProps: {
        textAlign: string;
    };

}

export namespace Query {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RecordTitle {
    namespace propTypes {
        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceArrayField {
    namespace Naked {
        namespace propTypes {
            function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace addLabel {
                // Too-deep object hierarchy from react_admin.ReferenceArrayField.Naked.propTypes.addLabel
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.ReferenceArrayField.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.ReferenceArrayField.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.ReferenceArrayField.Naked.propTypes.label
                const isRequired: any;

            }

            namespace sortBy {
                // Too-deep object hierarchy from react_admin.ReferenceArrayField.Naked.propTypes.sortBy
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace reference {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceArrayFieldController {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentWillReceiveProps(nextProps: any): void;

        fetchReferences(_a: any): void;

        render(): any;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceArrayInputController {
    namespace defaultProps {
        function referenceSource(resource: any, source: any): any;

    }

}

export namespace ReferenceField {
    namespace Naked {
        const defaultProps: {
            allowEmpty: boolean;
            classes: {
            };
            linkType: string;
            record: {
            };
        };

        namespace propTypes {
            function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function allowEmpty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function translateChoice(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace addLabel {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.addLabel
                const isRequired: any;

            }

            namespace cellClassName {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.cellClassName
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace headerClassName {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.headerClassName
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.label
                const isRequired: any;

            }

            namespace record {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.record
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.resource
                const isRequired: any;

            }

            namespace sortBy {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.sortBy
                const isRequired: any;

            }

            namespace translateChoice {
                // Too-deep object hierarchy from react_admin.ReferenceField.Naked.propTypes.translateChoice
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceFieldController {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentWillReceiveProps(nextProps: any): void;

        fetchReference(props: any): void;

        render(): any;

        static defaultProps: {
            allowEmpty: boolean;
            linkType: string;
            record: {
                id: string;
            };
            referenceRecord: any;
        };

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceInputController {
    namespace defaultProps {
        function referenceSource(resource: any, source: any): any;

    }

}

export namespace ReferenceManyField {
    const defaultProps: {
        addLabel: boolean;
        filter: {
        };
        perPage: number;
        sort: {
            field: string;
            order: string;
        };
        source: string;
    };

    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function filter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function perPage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function reference(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function target(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace filter {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace perPage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReferenceManyFieldController {
    class WrappedComponent {
        constructor(...args: any[]);

        componentDidMount(): void;

        componentWillReceiveProps(nextProps: any): void;

        fetchReferences(_a: any): void;

        render(): any;

        static defaultProps: {
            filter: {
            };
            perPage: number;
            sort: {
                field: string;
                order: string;
            };
            source: string;
        };

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RefreshButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
        };

    }

    namespace WrappedComponent {
        namespace propTypes {
            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function refreshView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace icon {
                // Too-deep object hierarchy from react_admin.RefreshButton.WrappedComponent.propTypes.icon
                const isRequired: any;

            }

            namespace label {
                // Too-deep object hierarchy from react_admin.RefreshButton.WrappedComponent.propTypes.label
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RefreshIconButton {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            icon: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
            label: string;
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Resource {
    class WrappedComponent {
        constructor(...args: any[]);

        componentWillMount(): void;

        componentWillUnmount(): void;

        render(): any;

        static defaultProps: {
            context: string;
            options: {
            };
        };

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Responsive {
    class Naked {
        constructor(props: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        getWidth(...args: any[]): any;

        render(): any;

        static displayName: string;

    }

    namespace Naked {
        namespace propTypes {
            function initialWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace initialWidth {
                // Too-deep object hierarchy from react_admin.Responsive.Naked.propTypes.initialWidth
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from react_admin.Responsive.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace propTypes {
        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RichTextField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function stripTags(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace stripTags {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SelectField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function choices(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function optionText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function optionValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function translateChoice(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace optionText {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace optionValue {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace translateChoice {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Show {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasCreate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasShow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasCreate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasShow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowActions {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace data {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowGuesser {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ShowView {
    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function aside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasEdit(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function hasList(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace aside {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasEdit {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace hasList {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace isLoading {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Sidebar {
    class Naked {
        constructor(props: any, context: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        render(): any;

        static contextTypes: {
        };

        static displayName: string;

    }

    class WrappedComponent {
        constructor(props: any, context: any);

        attach(theme: any): void;

        componentDidMount(): void;

        componentDidUpdate(): void;

        componentWillUnmount(): void;

        detach(theme: any): void;

        getClasses(): any;

        render(): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        class Naked {
            constructor(props: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            getWidth(...args: any[]): any;

            render(): any;

            static displayName: string;

        }

        namespace Naked {
            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Sidebar.Naked.Naked.propTypes
                const initialWidth: any;

                // Too-deep object hierarchy from react_admin.Sidebar.Naked.Naked.propTypes
                const theme: any;

                // Too-deep object hierarchy from react_admin.Sidebar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.Sidebar.Naked.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace WrappedComponent {
        class Naked {
            constructor(props: any, context: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            render(): any;

            static contextTypes: {
            };

            static displayName: string;

        }

        namespace Naked {
            class Naked {
                constructor(props: any);

                componentDidMount(): void;

                componentWillUnmount(): void;

                getWidth(...args: any[]): any;

                render(): any;

                static displayName: any;

                static propTypes: any;

            }

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.Naked.propTypes
                const innerRef: any;

            }

        }

        namespace contextTypes {
            function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace b768b78919504fba9de2c03545c5cd3a {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.contextTypes.b768b78919504fba9de2c03545c5cd3a
                const isRequired: any;

            }

            namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.contextTypes.d4bd0baacbc52bbd48bbb9eb24344ecd
                const isRequired: any;

            }

            namespace muiThemeProviderOptions {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.contextTypes.muiThemeProviderOptions
                const isRequired: any;

            }

        }

        namespace propTypes {
            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace classes {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.propTypes.classes
                const isRequired: any;

            }

            namespace innerRef {
                // Too-deep object hierarchy from react_admin.Sidebar.WrappedComponent.propTypes.innerRef
                const isRequired: any;

            }

        }

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleForm {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleList {
    namespace Naked {
        const defaultProps: {
            hasBulkActions: boolean;
            linkType: string;
            selectedIds: any[];
        };

        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasBulkActions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftAvatar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function leftIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onToggleItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function primaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rightAvatar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rightIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function secondaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedIds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function tertiaryText(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace data {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.data
                const isRequired: any;

            }

            namespace ids {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.ids
                const isRequired: any;

            }

            namespace leftAvatar {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.leftAvatar
                const isRequired: any;

            }

            namespace leftIcon {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.leftIcon
                const isRequired: any;

            }

            namespace onToggleItem {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.onToggleItem
                const isRequired: any;

            }

            namespace primaryText {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.primaryText
                const isRequired: any;

            }

            namespace rightAvatar {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.rightAvatar
                const isRequired: any;

            }

            namespace rightIcon {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.rightIcon
                const isRequired: any;

            }

            namespace secondaryText {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.secondaryText
                const isRequired: any;

            }

            namespace tertiaryText {
                // Too-deep object hierarchy from react_admin.SimpleList.Naked.propTypes.tertiaryText
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SimpleShowLayout {
    namespace propTypes {
        function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function version(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace basePath {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace resource {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace version {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SingleFieldList {
    class Naked {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            classes: {
            };
            linkType: string;
        };

    }

    namespace Naked {
        namespace propTypes {
            function basePath(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function data(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function ids(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function linkType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function resource(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace basePath {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.basePath
                const isRequired: any;

            }

            namespace className {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.className
                const isRequired: any;

            }

            namespace classes {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.classes
                const isRequired: any;

            }

            namespace data {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.data
                const isRequired: any;

            }

            namespace ids {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.ids
                const isRequired: any;

            }

            namespace resource {
                // Too-deep object hierarchy from react_admin.SingleFieldList.Naked.propTypes.resource
                const isRequired: any;

            }

        }

    }

    namespace contextTypes {
        function b768b78919504fba9de2c03545c5cd3a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function d4bd0baacbc52bbd48bbb9eb24344ecd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muiThemeProviderOptions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace b768b78919504fba9de2c03545c5cd3a {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace d4bd0baacbc52bbd48bbb9eb24344ecd {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muiThemeProviderOptions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedForm {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
        };

        static displayName: string;

    }

    const displayName: string;

    namespace propTypes {
        function wrappedComponentRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace wrappedComponentRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedShowLayout {
    class WrappedComponent {
        constructor(...args: any[]);

        render(): any;

        static defaultProps: {
            tabs: {
                $$typeof: any;
                key: any;
                props: {
                };
                ref: any;
                type: any;
            };
        };

        static displayName: string;

    }

    const displayName: string;

    namespace propTypes {
        function wrappedComponentRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace wrappedComponentRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TabbedShowLayoutTabs {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function match(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace match {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace value {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TextField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function classes(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace classes {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TitleForRecord {
    namespace propTypes {
        function defaultTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function record(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace defaultTitle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace record {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace title {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Toolbar {
    class Naked {
        constructor(props: any);

        componentDidMount(): void;

        componentWillUnmount(): void;

        getWidth(...args: any[]): any;

        render(): any;

        static Naked(_a: any): any;

        static displayName: string;

        static options: {
        };

    }

    namespace Naked {
        namespace Naked {
            const defaultProps: {
                submitOnEnter: boolean;
            };

            namespace propTypes {
                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const basePath: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const children: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const className: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const classes: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const handleSubmit: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const handleSubmitWithRedirect: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const invalid: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const pristine: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const record: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const redirect: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const resource: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const saving: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const submitOnEnter: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const undoable: any;

                // Too-deep object hierarchy from react_admin.Toolbar.Naked.Naked.propTypes
                const width: any;

            }

        }

        namespace propTypes {
            function initialWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function theme(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace initialWidth {
                // Too-deep object hierarchy from react_admin.Toolbar.Naked.propTypes.initialWidth
                const isRequired: any;

            }

            namespace width {
                // Too-deep object hierarchy from react_admin.Toolbar.Naked.propTypes.width
                const isRequired: any;

            }

        }

    }

    namespace propTypes {
        function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace innerRef {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TranslationProvider {
    class WrappedComponent {
        constructor(props: any);

        componentDidUpdate(prevProps: any): void;

        render(): any;

    }

    namespace childContextTypes {
        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function storeSubscription(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace storeSubscription {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace UrlField {
    namespace propTypes {
        function addLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cellClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function headerClassName(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortBy(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sortable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function source(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace addLabel {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cellClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace headerClassName {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortBy {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sortable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace source {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace textAlign {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ViewTitle {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace WithPermissions {
    const displayName: string;

    namespace contextTypes {
        function authProvider(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace authProvider {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace choices {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace email {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace fetchUtils {
    function createHeadersFromOptions(options: any): any;

    function fetchJson(url: any, options: any): any;

    function flattenObject(value: any, path: any): any;

    function queryParameters(obj: any, opts: any): any;

}

export namespace getDefaultValues {
    function recomputations(): any;

    function resetRecomputations(): any;

    function resultFunc(record: any, defaultValue: any, defaultValues: any): any;

}

export namespace maxLength {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace maxValue {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace minLength {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace minValue {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace number {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace regex {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}

export namespace required {
    namespace cache {
        const size: number;

        function clear(): void;

        function get(key: any): any;

        function has(key: any): any;

        function set(key: any, value: any): any;

    }

}


}